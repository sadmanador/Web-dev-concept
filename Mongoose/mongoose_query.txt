query

User.find({name: "ador"})  -> returns single user named ador
User.findOne({name: "ador"})  -> returns first user named ador
User.deleteOne({name: "ador"})  -> deletes first user named ador
User.deleteMany({payment: "unpaid"})  -> deletes all the user with payment: "unpaid".
User.exist({name: "ador"})  -> return user named ador

mongoose query "where"
User.where("name").equals("ador")  -> returns all the users named ador
User.where("age").gt(12)  -> returns all the users age>12
User.where("age").lt(12)  -> returns all the users age<12

chaining
User.where("age").gt(12).where("name").equals("ador")  -> returns all the users age>12, named ador
User.where("age").gt(12).lt(50).where("name").equals("ador")  -> returns all the users age>12, but age<50 and named ador
User.where("age").gt(12).lt(50).where("name").equals("ador").limit(2)  -> returns 2 users whose age>12, but age<50 and named ador
User.where("age").gt(12).lt(50).where("name").equals("ador").limit(2).select("address")  -> returns 2 users address field whose age>12, but age<50 and named ador


//user Schema
UserSchema = {name, age, bestFriend}

User.findOne({_id: id}).bestFriend = another id;
user.save()

//now get the best friendData form other user
User.where("name").equals("ador").populate("bestFriend")


//set a method to a Schema
UserShcema.methods.sayhi = function (){
    console.log(`Hi, I'm ${this.name}`)
}

//trying the method
try{
    await user.find({});
    user.sayhi();
}



